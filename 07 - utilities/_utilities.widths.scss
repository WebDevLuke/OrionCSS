//--------------------------------------------------------------------------------------------------------------------------------------
// WIDTHS
//--------------------------------------------------------------------------------------------------------------------------------------

/*
Utility classes to provide fluid widths to whichever element they're applied to. Most commonly used in
conjunction with the grid system object 'o-layout', but can be used with anything.
*/

/*
<div class="o-layout__item u-1/2">CONTENT</div>
*/


// WIDTHS MIXIN
//--------------------------------------------------------------------------------------------------------------------------------------

@mixin create-widths($width-sets, $breakpoint-suffix: null) {
	@each $denominator in $width-sets {
		@for $numerator from 1 through $denominator {

			/*
			[1] Reset margin-left to disabled any previous offsets
			*/

			// Width class, eg 'u-1/2'
			.u-#{$numerator}\/#{$denominator}#{$breakpoint-suffix} {
				width:($numerator / $denominator) * 100% !important;
				margin-left:0 !important;
			}
		}
	}
}

// OFFSETS MIXIN
//--------------------------------------------------------------------------------------------------------------------------------------

@mixin create-offsets($width-sets, $breakpoint-suffix: null) {
	@each $denominator in $width-sets {
		@for $numerator from 1 through $denominator {

			// Offset class, eg 'u-offset-1/2'
			.u-offset-#{$numerator}\/#{$denominator}#{$breakpoint-suffix} {
				margin-left:($numerator / $denominator) * 100% !important;
			}
		}
	}
}

// GENERATE STANDARD WIDTHS
//--------------------------------------------------------------------------------------------------------------------------------------

@include create-widths($width-sets);
@include create-offsets($width-sets);


// GENERATE RESPONSIVE WIDTHS
//--------------------------------------------------------------------------------------------------------------------------------------

// Create responsive variants using settings.breakpoints
// Changes width when breakpoint is hit
// Example: .u-1/3@md

@each $bp-name, $bp-value in $mq-breakpoints {
	@include mq(#{$bp-name}) {
		@include create-widths($width-sets, \@#{$bp-name});
		@include create-offsets($width-sets, \@#{$bp-name});
	}
}

// Create responsive variants using settings.breakpoints
// Changes width until breakpoint is hit
// Example: .u-1/3@max-md

@each $bp-name, $bp-value in $mq-breakpoints {
	@include mq($until: #{$bp-name}) {
		@include create-widths($width-sets, \@max-#{$bp-name});
		@include create-offsets($width-sets, \@max-#{$bp-name});
	}
}


// FULL & MAX WIDTH UTILITIES
//--------------------------------------------------------------------------------------------------------------------------------------

/*
Fixed & 100% max-width sizings for control the widths of groups of elements, images etc.
Numbers are based on values in settings.spacing
*/

// Example: u-max-width-small
@each $sp-name, $sp-value in $spacing {
	.u-max-width-#{$sp-name} {
		max-width:rem($sp-value * 10) !important;
	}
}

.u-full-width {
	width:100% !important;
	max-width:100% !important;
}


// Breaks out of containers with to go full width
.u-breakout {
	width: 100vw;
	position: relative;
	left: 50%;
	right: 50%;
	margin-left: -50vw;
	margin-right: -50vw;
}

// Changes max-width when breakpoint is hit
// Example: u-max-width-small@md
// Example: u-full-width@md
@each $bp-name, $bp-value in $mq-breakpoints {
	@include mq(#{$bp-name}) {
		@each $sp-name, $sp-value in $spacing {
			.u-max-width-#{$sp-name}\@#{$bp-name} {
				max-width:rem($sp-value * 10) !important;
			}
		}
		.u-full-width\@#{$bp-name} {
			width:100% !important;
			max-width:100% !important;
		}
		.u-breakout\@#{$bp-name} {
			width: 100vw;
			position: relative;
			left: 50%;
			right: 50%;
			margin-left: -50vw;
			margin-right: -50vw;
		}
	}
}

// Changes max-width until breakpoint is hit
// Example: u-max-width-small@max-md
// Example: u-full-width@md
@each $bp-name, $bp-value in $mq-breakpoints {
	@include mq($until: #{$bp-name}) {
		@each $sp-name, $sp-value in $spacing {
			.u-max-width-#{$sp-name}\@max-#{$bp-name} {
				max-width:rem($sp-value * 10) !important;
			}
		}
		.u-full-width\@max-#{$bp-name} {
			width:100% !important;
			max-width:100% !important;
		}
		.u-breakout\@max-#{$bp-name} {
			width: 100vw;
			position: relative;
			left: 50%;
			right: 50%;
			margin-left: -50vw;
			margin-right: -50vw;
		}
	}
}
